# >>> list1 = [20, 10, 40, 50, 30]
# >>> list1.sort() # list1의 원소를 오름차순 정렬
# >>> list1
# [10, 20, 30, 40, 50]
# >>> list1.sort(reverse = True) # list1의 원소를 내림차순 정렬 #(reverse = True) 키워드 호출
# >>> list1
# [50, 40, 30, 20, 10]

# 정렬
# 정렬을 하는 이유는?
# 1) 순서대로 나열하여 가독성이 좋게하려고. 데이터를 이용하기 편리하게 함
# 2) 검색 속도를 향상시키기 위해
# 정렬해서 [1,2,...,1억] 1억개의 데이터
# 가운데값 m을 x와 비교 x<m,x>m 하면서 같으면 럭키. 아니면 절반의 데이터는 조사필요가 없음
# 다시 절반의 절반값과 비교해서 계속 범위를 좁혀가면서가장 많은 경우의 수에도 32번 이내로 원하는데이터를 찾음.
# ->절반씩 나눠 검사하는 방식을 바이너리 서치라고 부르며, 빠른 검색이가능하다.
# 정렬하지않으면 모든 데이터를 전부 비교해야함. 가장 많은 경우의 수에는 1억번을 전부 검사.

# 이진 탐색(binary search)은 정렬된 데이터 집합을 이분화하면서 탐색하는 방법이다. 
# 예를들어 비유하면, 가나다순으로 정렬되어 있는 전화번호부에서 
# 임의의 사람에 대한 전화번호를 찾는 경우다.