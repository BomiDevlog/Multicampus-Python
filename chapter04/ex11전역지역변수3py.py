def print_sum():
    global a,b 
    a=100
    b=200
    # 1)지역변수 a의 선언 2)전역변수 a의 수정 중에서 
    # 전역변수로 처리하게 알려주는 것이 global키워드. (읽기뿐만아니라 쓰기작업까지 가능하게 하는 것이 global키워드.)
    result=a+b
    print('print_sum() 내부 :',a,'과',b,'의 합은',result,'입니다')

a=10
b=20
print('print_sum() 호출전 :',a,b)
print_sum() # 함수가 호출되면서 전역변수a, b값이 수정됨

result=a+b
print('print_sum() 외부 :',a,'과',b,'의 합은',result,'입니다')

# 전역변수는 남발하면 안됨 -> 추적이 어려워서 Bug의 온상이 된다.
# 함수는 일반화되어야함. 
# 그러나 함수내에서 전역변수에 의존하면 (전역변수의 값으로 판단하고 조치를 취한다면) 
# 전역변수가 무엇인지에 따라 함수 호출값이 예측불가가 된다. 
# 전역변수는 함수밖에서 값이 변경될수 잇기때문. 그래서 함수의 일반화가 깨지게됨.
# -> 전역변수에 대한 참조를 매개변수로 받아 처리해야한다.